rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Yachts collection rules
    match /yachts/{yachtId} {
      allow read: if true;  // Anyone can read yacht data
      allow write: if request.auth != null && isAdmin();  // Only admins can modify yachts
    }

    // Bookings collection rules
    match /bookings/{bookingId} {
      // Allow reading basic booking info (dates and yacht) for availability checking
      allow read: if request.auth != null;
      
      // But restrict access to sensitive booking details
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
        
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
        
      allow update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }
  }
} 